name: Docker Image CI

on:
  release:
    types: [published]

env:
  AWS_REGION: us-west-2                         # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: public.ecr.aws/g0d6f2g5/wireguard-manager    # set this to your Amazon ECR repository name

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

    - name: Build the Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        echo ECR_REGISTRY $ECR_REGISTRY
        echo ECR_REPOSITORY $ECR_REPOSITORY
        echo IMAGE_TAG $IMAGE_TAG
        docker build . --file Dockerfile --tag $ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy the Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        docker push $ECR_REPOSITORY:$IMAGE_TAG
    

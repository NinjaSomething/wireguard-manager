name: Docker Image CI

on:
  release:
    types: [published]

env:
  AWS_REGION: us-east-1                         # set this to your preferred AWS region, e.g. us-east-1
  ECR_REPOSITORY: public.ecr.aws/g0d6f2g5/wireguard-manager    # set this to your Amazon ECR repository name

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public


    - name: Build the Docker image
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: my-ecr-public-registry-alias
        REPOSITORY: my-ecr-public-repo
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        echo REGISTRY $REGISTRY
        echo REGISTRY_ALIAS $REGISTRY_ALIAS
        echo REPOSITORY $REPOSITORY
        echo IMAGE_TAG $IMAGE_TAG
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .

    - name: Deploy the Docker image
      env:
        REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        REGISTRY_ALIAS: my-ecr-public-registry-alias
        REPOSITORY: my-ecr-public-repo
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        echo REGISTRY $REGISTRY
        echo REGISTRY_ALIAS $REGISTRY_ALIAS
        echo REPOSITORY $REPOSITORY
        echo IMAGE_TAG $IMAGE_TAG
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
    

name: Docker Image CI
on:
  release:
    types: [published]
env:
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-east-1
  REGISTRY_ALIAS: g0d6f2g5
  REPOSITORY: wireguard-manager
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          PYTHONPATH=./src pytest . --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Build the Docker image
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          echo "!!!! Building Docker image...$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG -t latest .
      - name: Push the Docker image
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          echo "!!!! Pushing Docker image...$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY --all-tags
